----------------------------------------------------------------------
■「KeywordReg」：キーワード抽出SAORI
■Written by ukiya
　mailto:ukiya@s.mail-box.ne.jp
　http://ukiya.sakura.ne.jp/
----------------------------------------------------------------------

■これは何をするものか

　ユーザの入力など、自然言語の処理を簡易にするため、入力された文から
　予め設定したキーワードを抽出するSAORIです。

■動作環境
　・漢字→ひらがな変換機能を使う場合は、それに対応したIMEが
　　入っていることが条件となります。

　・（参考）開発環境：Windows XP Pro SP2 + Pentium4 1.7GHz + 768MB Memory
　　　　　  C++ on VisualStudio.NET2005

■基本コンセプト

・入力語句をひらがなに逆変換する（IMEのAPI利用） 
・キーワードと類義語を定義しておき、ヒットしたキーワードを返す

■基本的な動作例

・SAORIと同じディレクトリに、キーワード辞書（keyword.txt）を置いておく
・「僕はとても辛いんだ」を入力 
・ぼくはとてもつらいんだ　に平仮名変換 
・キーワード辞書を見てヒットしたものを返す 

（キーワード辞書の例 ）--------------------------
わたし＝ぼく、わたし、おれ、あたし、われ
とても＝たいへん、すごく、とても、ちょう、ちょー
つらい＝つらい、くるしい、しんどい
こんにちは＝こんにちは、こんちゃー、こんちは
-------------------------------------------------

・この場合、「わたし」「とても」「つらい」が返る 
・返し方は「わたし　とても　つらい」と、全角空白区切り

■仕様

・SAORIの初回ロード時に、同ディレクトリのkeyword.txtを読み込む 
・動作は３通りある 
　GETKEYWORD　これは基本動作で説明したとおりの動作 
　GETYOMI 　　おまけ。入力した文字列の読みを列挙する。 
　GETKANJI　　おまけ。入力した文字列の漢字変換を列挙する。

・引数・返り値は以下の通り 

（１）GETKEYWORD
　Argument0:GETKEYWORD
　Argument1:判定したい文字列
　Argument2:オプション※
　Result:キーワード判定結果
　Value0:判定したい文字列の読み（１つのみ返る） 

（２）GETYOMI
　Argument0:GETYOMI
　Argument1:変換したい文字列
　Argument2:なし
　Result:読み候補の数
　Value0:読み候補（複数返る） 

（３）GETKANJI
　Argument0:GETKANJI
　Argument1:変換したい文字列
　Argument2:なし
　Result:漢字変換候補の数
　Value0:漢字変換候補（複数返る） 

※オプションは、現在 NOCONVERT のみ。
　この文字列が指定されていた場合、判定したい文字列を平仮名変換することなく
　そのままキーワード判定する。

■keyword.txt の書式 

・先頭に＃もしくは#があった場合はコメント 
・代表キーワード＝キーワード、キーワード、キーワード　の形で書く 
・キーワードのいずれかがヒットした代表キーワードが返される 
・GETKEYWORDでNOCONVERTオプション指定をしない限り、キーワードは平仮名で
　書かないと意味が無い（平仮名に変換してからキーワード判定をするので） 
・「＝」は「=」でも可 
・「、」は「､，,」でも可

■制限事項、TIPS

・漢字→ひらがな変換の能力は、動作環境のIMEの能力に依存します。
・MS-IMEとATOKでしか動作確認していません。
・ATOKでは、適当な文節ごとに区切り（空白、句読点）を入れないと
　ひらがなに変換できない場合が多いです。
　（例）祇園精舎→○　祇園精舎の鐘の声→×
　　　　祇園精舎の、鐘の、声→○
・従って、厳密にどの環境でも同じ動作をさせたい場合、NOCONVERT
　オプションを使って、漢字のままキーワードを記述してください。
・漢字とひらがな両方をキーワード登録し、NOCONVERTオプションあり、
　なしの場合の結果を比較して、より多くヒットした方を用いるのも
　一つのテです。

■動作実績

（問題なく動作したもの）
・Windows XP Home SP2+MS IME2002スタンダード
・Windows XP Pro SP2+MS IME2002スタンダード
・Windows 98+MS IME98

（漢字→平仮名変換で制限のあるもの（上記参照））
・Windows 2000+Atok14
・Windows XP+Atok16
・Windows XP Pro SP2+Atok2006試用版

（漢字→平仮名変換に失敗したもの）
・Windows XP Home SP1+JapanistV1.0

■SHIORI記述例

・AYAの場合
TalkToUser{
　_result=FUNCTIONEX("kenonoke.dll","GETKEYWORD",reference1);
　if "こんにちは" _in_ _result
　{
　　"\0\s0こんにちはっ。\e"
　}
}

・里々の場合
（satori_conf.txtにkenonoke,saori/kenonoke.dllを追加）
＃------------------------------------------------
＃ 対ユーザ（COMMUNICATEボックスからの入力）

＊OnCommunicate
＞ユーザコミュ【タブ】（compare,（Ｒ０）,user）
≫（Ｒ０）「（Ｒ１）」
＞COMMUNICATE該当なし

＊ユーザコミュ
＄コミュキーワード【タブ】（kenonoke,GETKEYWORD,（Ｒ１））
＞ユーザコミュ中身「（コミュキーワード）」
≫ユーザコミュ中身「（コミュキーワード）」
＞ユーザ該当なし

＊ユーザコミュ中身「こんにちは」
：こんにちはっ。

＊ユーザコミュ中身「わたし　つらい」
：そっか、つらいんだー。

＊ユーザコミュ中身「わたし　とても」
：そっか、すごいんだー。

＊ユーザコミュ中身「わたし」
：ん？きみがどうしたの？


■配布条件等

　・非商用利用であれば、アーカイブを改変しない限り再配布に制限はありません。
　・事後連絡でもいいので一報入れて頂けるとありがたいです。
　・商用利用は（無いと思いますが）事前にご相談下さい。

■更新履歴

2006/08/29	ver1.0.0.0	新規作成
2006/10/14	ver1.0.1.0	keyword.txtに空行が含まれるとおかしくなる不具合を修正
						里々の例を修正
						（Thanks to かざま様 http://hiho.boo.jp/ukagaka/）
2010/04/02	ver2.0.0.0	名前変更（kenonoke→keywordreg）
						CSAORIベースに（機能追加無し）
